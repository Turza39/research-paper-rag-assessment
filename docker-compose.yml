services:
  mongodb:
    image: mongo:latest
    container_name: research-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: research-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - app-network
    # No health check - simpler

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: research-backend
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./data:/app/data
      - ./sample_papers:/app/sample_papers
    environment:
      - PYTHONPATH=/app
      - MONGODB_URL=mongodb://admin:password123@research-mongodb:27017
      - QDRANT_HOST=research-qdrant
      - QDRANT_PORT=6333
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      - mongodb
      - qdrant
    networks:
      - app-network
    restart: on-failure  # Will retry if Qdrant isn't ready yet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: research-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - app-network
    stdin_open: true

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  qdrant_data: